#!/usr/bin/perl
use local::lib;
use v5.10;
use strict;
use warnings;

use File::Find qw( find );
use FindBin qw( $RealBin );
use Mojo::File ();
use Mojo::Util qw( trim );
use YAML::Tiny ();

$| = 1;

my ($command, @args) = (lc(shift // ''), @ARGV);
$command || die <<'EOF';
syntax: dev-util <command> [command args]

commands:
    svg-import <path>   update svg source from font-awesome
    sass-make           create sass dark mode css
EOF

if ($command eq 'svg-import') {
    my ($source_path)  = @args;
    my $svg_path       = $RealBin . '/web/svg';
    my $fa_path        = $svg_path . '/font-awesome';
    my $templates_path = "$RealBin/web/templates";

    # update svg icons from font-awesome pro

    $source_path =~ s{/$}{};
    foreach my $dir (qw( svgs advanced-options/raw-svg )) {
        if (-d "$source_path/$dir") {
            $source_path .= "/$dir";
            last;
        }
    }
    die "failed to find font-awesome pro icons\n" unless -d "$source_path/solid";

    my $mapping = YAML::Tiny->read("$fa_path/mapping.yaml")->[0];
    foreach my $output_name (sort keys %{$mapping}) {
        my $input_file  = "$source_path/" . $mapping->{$output_name} . '.svg';
        my $output_file = "$fa_path/$output_name.svg";

        my $input = Mojo::File->new($input_file)->slurp;
        $input =~ s/<!--.*-->//sg;
        $input = trim($input);

        my $output = -e $output_file ? Mojo::File->new($output_file)->slurp : '';

        if ($input eq $output) {
            say "inline-svg: $output_name unchanged";
        } else {
            Mojo::File->new($output_file)->spurt($input);
            say "inline-svg: $output_name \e[34mupdated\e[0m";
        }
    }

}
